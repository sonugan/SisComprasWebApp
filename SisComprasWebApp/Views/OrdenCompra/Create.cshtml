@model Modelos.OrdenCompraModel

@{
    ViewBag.Title = "Orden de Compra";
}

<style type="text/css">
    .swiper-container {
    width: 600px;
    height: 300px;
}   
</style>

<script type="text/javascript" src="~/Scripts/Views/ordenDeCompra.js"></script>

<h2>Crear</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h4>Orden de compra</h4>
    <hr />
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.cabecera.ProveedorId, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-4 DB-select-proveedor">
                @Html.DropDownListFor(model => model.cabecera.ProveedorId, Model.cabecera.ProveedoresActivos, "Seleccione un proveedor")
                @Html.ValidationMessageFor(model => model.cabecera.ProveedorId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.cabecera.FechaEmision, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.cabecera.FechaEmision, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cabecera.FechaEmision, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.cabecera.NroReferencia, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.cabecera.NroReferencia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cabecera.NroReferencia, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.cabecera.Observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.cabecera.Observaciones, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cabecera.Observaciones, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-1">
                @Html.LabelFor(model => model.cabecera.CantidadTotal, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-1 alert-success">
                @Html.DisplayFor(model => model.cabecera.CantidadTotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cabecera.CantidadTotal, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.cabecera.MonedaOperacionId, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-2 DB-select-moneda">
                @Html.DropDownListFor(model => model.cabecera.MonedaOperacionId, Model.cabecera.MonedasActivas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cabecera.MonedaOperacionId, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.LabelFor(model => model.cabecera.Cotizacion, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-2">
                @Html.EditorFor(model => model.cabecera.Cotizacion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cabecera.Cotizacion, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2 alert-success">
                @Html.DisplayFor(model => model.cabecera.ImporteTotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cabecera.ImporteTotal, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                <label class="control-label col-md-8">Artículos cargados a partir del:</label>
            </div>
            <div class="col-md-2">
                <input class="form-control text-box single-line col-md-2" data-val="true" data-val-date="The field Desde must be a date." data-val-required="La fecha de carga es obligatoria" id="FechaCarga" name="FechaCarga" type="date" value=now />
            </div>
            <div class="col-md-2">
                <input type="button" class="form-control btn-success" id="btnCargarArticulos" value="Cargar" />
            </div>
        </div>
    </div>
    <div class="fotorama" id="articulosActuales" data-width="50%"
         data-ratio="800/600" data-nav="thumbs" data-auto="false">   
    </div>
        @Html.Partial("OCLineasCarga", Model)
        @Html.Partial("OCLineasOtros", Model)

     <div class="form-group">
         <div class="col-md-offset-0 col-md-10">
            <input type="submit" value="Crear" class="btn btn-default" />
         </div>
     </div>
}



<div class="col-md-offset-0 col-md-10">
    @Html.ActionLink("Volver", "Index")
</div>


<script>
        //$("#btnCargarArticulos").click(function ()
        //{

        //    //ProveedorId y FechaCarga debe corresponder con la estructura del parámetro que recibe
        //    //el método ConsultarArticulosCargados del controller OrdenCompra (ver el Action)
        //    var dataObject = { sProveedorId: $('#cabecera_ProveedorId').val(), sFechaCarga: $('#FechaCarga').val() };
        //    $.ajax({
        //        url: '@Url.Action("ConsultarArticulosCargados", "OrdenCompra")',
        //        type: "GET",
        //        data: dataObject,
        //        datatype: "json",
        //        success: function (result)
        //        {
        //            //if (result.toString() == "") //Fracaso
        //            //{
        //            //    alert("Fracaso 1");
        //            //}
        //            //else //Éxito
        //            //{
        //            //    alert("Exito: " + result);
        //            //}
        //            //$("#articulosActuales").empty();
        //            //$(".fotorama--hidden").remove();
        //            var data = []
        //            for (var i = 0; i < result.length; i++) {
        //                $("#articulosActuales").append('<img src="data:image/png;base64,' + result[i].Foto.ToBase64 + '">')
                    
        //            }
        //            $('.fotorama').fotorama({
        //                data: [
        //                  { img: '1.jpg', thumb: '1-thumb.jpg' },
        //                  { img: '2.jpg', thumb: '2-thumb.jpg' }
        //                ]
        //            });

        //            // Load the new set of Photos here
        //            // after that the below statement will re-initialize the fotorama gallery plugin
        //            //$('.fotorama').fotorama();
        //        },
        //        error: function (result)
        //        {
        //            alert("Error en btnCargarArticulos.click");
        //        }
        //    })
        //})

</script>